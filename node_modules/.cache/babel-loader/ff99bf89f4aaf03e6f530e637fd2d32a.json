{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ashis\\\\OneDrive\\\\Documents\\\\CodeWithAshish\\\\tictactoe\\\\src\\\\Column.js\";\nimport React, { Component } from \"react\";\nvar symbolsMap = {\n  2: [\"marking\", \"32\"],\n  0: [\"marking marking-x\", 9587],\n  1: [\"marking marking-o\", 9711]\n};\n\nclass Column extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleNewMove = this.handleNewMove.bind(this);\n  }\n\n  handleNewMove(e) {\n    if (!this.props.active) {\n      document.querySelector(\"#message1\").style.display = \"none\";\n      document.querySelector(\"#message2\").innerHTML = \"Game is already over! Reset if you want to play again.\";\n      document.querySelector(\"#message2\").style.display = \"block\";\n      return false;\n    } else if (this.props.marking == 2) this.props.onNewMove(parseInt(e.target.id));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      onClick: this.handleNewMove,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: symbolsMap[this.props.marking][0],\n        id: this.props.id,\n        children: String.fromCharCode(symbolsMap[this.props.marking][1])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Column;","map":{"version":3,"sources":["C:/Users/ashis/OneDrive/Documents/CodeWithAshish/tictactoe/src/Column.js"],"names":["React","Component","symbolsMap","Column","constructor","props","handleNewMove","bind","e","active","document","querySelector","style","display","innerHTML","marking","onNewMove","parseInt","target","id","render","String","fromCharCode"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAIC,UAAU,GAAG;AACb,KAAG,CAAC,SAAD,EAAY,IAAZ,CADU;AAEb,KAAG,CAAC,mBAAD,EAAsB,IAAtB,CAFU;AAGb,KAAG,CAAC,mBAAD,EAAsB,IAAtB;AAHU,CAAjB;;AAMA,MAAMC,MAAN,SAAqBH,KAAK,CAACC,SAA3B,CAAqC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAEDD,EAAAA,aAAa,CAACE,CAAD,EAAI;AACb,QAAI,CAAC,KAAKH,KAAL,CAAWI,MAAhB,EAAwB;AACpBC,MAAAA,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCC,KAApC,CAA0CC,OAA1C,GAAoD,MAApD;AACAH,MAAAA,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCG,SAApC,GACI,wDADJ;AAEAJ,MAAAA,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCC,KAApC,CAA0CC,OAA1C,GAAoD,OAApD;AACA,aAAO,KAAP;AACH,KAND,MAMO,IAAI,KAAKR,KAAL,CAAWU,OAAX,IAAsB,CAA1B,EACH,KAAKV,KAAL,CAAWW,SAAX,CAAqBC,QAAQ,CAACT,CAAC,CAACU,MAAF,CAASC,EAAV,CAA7B;AACP;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,OAAO,EAAE,KAAKd,aAAnC;AAAA,6BACI;AAAK,QAAA,KAAK,EAAEJ,UAAU,CAAC,KAAKG,KAAL,CAAWU,OAAZ,CAAV,CAA+B,CAA/B,CAAZ;AAA+C,QAAA,EAAE,EAAE,KAAKV,KAAL,CAAWc,EAA9D;AAAA,kBACKE,MAAM,CAACC,YAAP,CAAoBpB,UAAU,CAAC,KAAKG,KAAL,CAAWU,OAAZ,CAAV,CAA+B,CAA/B,CAApB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAzBgC;;AA4BrC,eAAeZ,MAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nvar symbolsMap = {\r\n    2: [\"marking\", \"32\"],\r\n    0: [\"marking marking-x\", 9587],\r\n    1: [\"marking marking-o\", 9711]\r\n};\r\n\r\nclass Column extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleNewMove = this.handleNewMove.bind(this);\r\n    }\r\n\r\n    handleNewMove(e) {\r\n        if (!this.props.active) {\r\n            document.querySelector(\"#message1\").style.display = \"none\";\r\n            document.querySelector(\"#message2\").innerHTML =\r\n                \"Game is already over! Reset if you want to play again.\";\r\n            document.querySelector(\"#message2\").style.display = \"block\";\r\n            return false;\r\n        } else if (this.props.marking == 2)\r\n            this.props.onNewMove(parseInt(e.target.id));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col\" onClick={this.handleNewMove}>\r\n                <div class={symbolsMap[this.props.marking][0]} id={this.props.id}>\r\n                    {String.fromCharCode(symbolsMap[this.props.marking][1])}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Column;"]},"metadata":{},"sourceType":"module"}